name: MSBuild Reusable Workflow

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
        default: "Any CPU"
      configuration:
        required: true
        type: string
        default: "Release"
      maxCpu:
        required: false
        type: number
        default: 8
      clean:
        required: false
        type: boolean
        default: false
      msbuildArguments:
        required: false
        type: string
        default: ""
      createLogFile:
        required: false
        type: boolean
        default: false
      logFileVerbosity:
        required: false
        type: string
        default: "minimal"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Locate Solution File
        id: find_sln
        run: |
          $solution = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Filter "*.sln" | Select-Object -ExpandProperty FullName
          if ($solution) {
            Write-Output "SOLUTION_PATH=$solution" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "Solution file found: $solution"
          } else {
            echo "No solution file found!"
            exit 1
          }
        shell: pwsh

      - name: Restore NuGet Packages
        run: nuget restore "%SOLUTION_PATH%"
        shell: cmd

      - name: Build Solution with MSBuild
        run: |
          $msbuildCmd = "msbuild `"$env:SOLUTION_PATH`" /p:Platform=`"${{ inputs.platform }}`" /p:Configuration=${{ inputs.configuration }} /m:${{ inputs.maxCpu }} ${{ inputs.msbuildArguments }}"
          if (${{ inputs.clean }}) {
            $msbuildCmd += " /t:Clean,Build"
          }
          if (${{ inputs.createLogFile }}) {
            $logFile = "$env:BUILD_ARTIFACTSTAGINGDIRECTORY\build.log"
            $msbuildCmd += " /fl /flp:logfile=`"$logFile`";verbosity=${{ inputs.logFileVerbosity }}"
          }
          Write-Host "Executing: $msbuildCmd"
          Invoke-Expression $msbuildCmd
        shell: pwsh
